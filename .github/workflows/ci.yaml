name: my ci

on:
  push:
    branches:
      - main
  page_build:
    branches:
      - main
permissions:
  id-token: write
  contents: read

jobs:
  my-super-ci:
    runs-on: ubuntu-latest
    steps:
      - name: say hello
        run: echo "hello from github actions"

      - name: checkout repository
        uses: actions/checkout@v4


      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build with Maven
        run: mvn -f ./applications/user-service-java/user-service/pom.xml clean package -DskipTests

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::909177772578:role/githu-idp
          aws-region: eu-west-3

      - name: login to amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build tag and push docker image to amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testspace/devops
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./applications/user-service-java/user-service
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Generate temporary SSH key
        run: |
          ssh-keygen -t rsa -b 2048 -f ./temp_rsa -q -N ""

      - name: Send temporary SSH public key to EC2 via Instance Connect
        env:
          INSTANCE_ID: i-073b7c3671a8196e8
          AWS_REGION: eu-west-3
        run: |
          AZ=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].Placement.AvailabilityZone" --output text)
          aws ec2-instance-connect send-ssh-public-key \
            --instance-id $INSTANCE_ID \
            --availability-zone $AZ \
            --instance-os-user ec2-user \
            --ssh-public-key file://./temp_rsa.pub

      - name: Deploy with Ansible
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testspace/devops
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "[web]" > inventory
          echo "$(aws ec2 describe-instances --instance-ids ${{ secrets.INSTANCE_ID }} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text) ansible_user=ec2-user" >> inventory

          ansible-playbook -i inventory ./infrastructure/ansible/deploy.yaml \
            --private-key ./temp_rsa \
            --ssh-extra-args='-o StrictHostKeyChecking=no' \
            --extra-vars "ecr_repo=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


